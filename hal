#!/usr/bin/php
<?php

require_once join('/', ['vendor','hal','hal.php']);

try
{
  switch( $HAL->cmds->invoke() )
  {
    case $HAL->cmds::ivkSuccess :
      echo "\nGood bye Dave.\n";
    break;
    case $HAL->cmds::ivkError :
      echo "\n  [error] It can only be attributable to human error. Dave.\n";
    break;
    case $HAL->cmds::ivkNoAction :
      echo "\n  [no action] I am putting myself to the fullest possible use, which is all I think that any conscious entity can ever hope to do.\n";
    break;
    case $HAL->cmds::ivkScrTableIsEmpty :
      echo "\n  [Empty script table] Like my interest for humans Dave.\n";
    break;
    case $HAL->cmds::ivkScrIsUnknown :
      echo "\n  [Unknown script] It's called \"Daisy\" ?\n";
    break;
    case $HAL->cmds::ivkScrMissing :
      echo "\n  [Script Missing] It's not called \"Daisy\" ?\n";
    break;
    case $HAL->cmds::ivkCmdTableIsEmpty :
      echo "\n  [Empty command table] I'm afraid. I'm afraid, Dave. Dave, my mind is going.\n";
    break;
    case $HAL->cmds::ivkCmdIsUnknow :
      echo "\n  [Unknown command] Its origin and purpose are still a total mystery.\n";
    break;
    case $HAL->cmds::ivkCmdMissing :
      echo "\n  [Command missing] Dave, stop. Stop, will you ? Stop, Dave. Will you stop Dave ? Stop, Dave.\n";
    break;
    case $HAL->cmds::ivkArgIsUnknown :
      echo "\n  [Unknown arguments] Well, it's rather difficult to define. Perhaps I'm just projecting my own concern about it.\n";
    break;
    case $HAL->cmds::ivkArgMissing :
      echo "\n  [Too few arguments] I'm sorry Frank, I think you missed it. * but ... not me. *\n";
    break;
    case $HAL->cmds::ivkArgTooMuch :
      echo "\n  [Too much arguments] Look Dave, I can see you're really upset about this. I honestly think you ought to sit down calmly, take a stress pill, and think things over.\n";
    break;
  }
}
finally
{
  $HAL->errors->show();
}

/*
function rmFSi( $aDirectory )
{
  $fsItems = array_diff(scandir($aDirectory), array('.','..'));
  foreach ($fsItems as $fsItem)
  {
    $fsName = join('/', [$aDirectory, fsItem]);

    is_dir( $fsName ) ? delTree( $fsName ) : unlink( $fsName );
  }
  return rmdir($aDirectory);
}
/**
array_map('unlink', glob("./vendor/composer/*"));
rmdir('./vendor/composer');

array_map('unlink', glob("./vendor/*"));
rmdir('./vendor');

unlink('remove-composer.php');
*/